package controller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.MemberVO;
import service.MemberService;
import service.MemberServiceImpl;


@WebServlet("/mem/*")
public class MemberController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	// 로그 객체 선언
	private static final Logger log =LoggerFactory.getLogger(MemberController.class);
	// requestDespatcher 객체
	private RequestDispatcher rdp;
	// destPage : 목적지 주소 저장 변수
	private String destPage;
	// isOk
	private int isOk;
	
	private MemberService msv; //service -> interface 생성
	public MemberController() {
		
		msv=new MemberServiceImpl(); // service -> class 생성
	}
	
	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// encoding 설정, contentType 설정, 요청경로 파악
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		response.setContentType("text/html; charset=UTF-8");//jsp파일 가면 contentType 있음. 복붙해
		
		// jsp에서 오는 요청 주소
		String uri = request.getRequestURI(); 
		String path=uri.substring(uri.lastIndexOf("/")+1);
		log.info("path>>> "+path);
		
		switch(path){
		case "join": //회원가입 페이지 여는 메서드
			destPage="/member/join.jsp";
			log.info("회원가입 페이지 열기");
			break;
		case "register": //회원가입 DB저장하는 메서드
			try {
				//jsp에서 보낸 파라미터 받기
				String id = request.getParameter("id");
				String pwd = request.getParameter("pwd");
				String email = request.getParameter("email");
				int age  = Integer.parseInt(request.getParameter("age"));
				MemberVO mvo = new MemberVO(id, pwd, email, age);
				log.info("join check 1 "+mvo );
				isOk=msv.register(mvo);
			} catch (Exception e) {
				e.printStackTrace();
				
			}
			break;
		
		}
		//목적지 주소값 세팅
		rdp = request.getRequestDispatcher(destPage);
		//정보 실어 보내기
		rdp.forward(request, response);
	}


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request,response);
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request,response);
	}

}
